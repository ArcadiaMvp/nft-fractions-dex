{
  "manifestVersion": "3.1",
  "impls": {
    "65f656d17ffe72f56d7fb697c094519c0f461ce887eeab8ece79e80ab2f9089e": {
      "address": "0x75eBdACDA9660Ec33a91B982fb7f9dfF84867f55",
      "txHash": "0x5ecc18771c2123d4f5c4dfabccd4504b59538e76eea044c8ec53176f85fc7924",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)1980_storage",
            "src": "NftFractionsDex.sol:17"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)57_storage)",
            "src": "NftFractionsDex.sol:24"
          }
        ],
        "types": {
          "t_struct(Counter)1980_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)57_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)57_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4dd90be63cffe512fee6389a8fe4576ee341e4f9ab18078104ea8923cf7fa2b0": {
      "address": "0x68391770CF558870FFD73c9981a11581e629D012",
      "txHash": "0x3a15f2f233462faeda819f21b12e365dffec97cb2cb8a6396246246ebacefee8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)1892_storage",
            "src": "NftFractionsDex.sol:17"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)84_storage)",
            "src": "NftFractionsDex.sol:24"
          }
        ],
        "types": {
          "t_struct(Counter)1892_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)84_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)84_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "67f6d52caef53f762ded2410defa37986244010a4475fb16035f0691c698c3cb": {
      "address": "0xE048BBbc5F6F91d767F255F5B0a42B20d120a896",
      "txHash": "0x116f7a5765d6a47663befcae8625d131d48f1ec06da4436693c4286527829f02",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2038_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)",
            "src": "NftFractionsDex.sol:26"
          }
        ],
        "types": {
          "t_struct(Counter)2038_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)87_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c6addb112c1a6d61c273f9ca5585fa508b53de9a6a86985ea578fd8e11cefc94": {
      "address": "0x5c357B4D37CF820B12e7612D861E058Df5E6f391",
      "txHash": "0x9137216b1098ffce62ba3066fa68c56c33360979331e93e0eeac699b38cfb585",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2035_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)",
            "src": "NftFractionsDex.sol:26"
          }
        ],
        "types": {
          "t_struct(Counter)2035_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)87_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d2b90db5881533a72957d220dc81751b8398bdeb10465a69cadcd87ed384e1c": {
      "address": "0x4f2c2Ae9145961DBf0CFf8B9DF2408eC6aA0c0Ee",
      "txHash": "0x46b9467b3b43ba2e337f5c0a3087912a8e174a8aa42b8c488731e76f250c64fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2038_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)",
            "src": "NftFractionsDex.sol:26"
          }
        ],
        "types": {
          "t_struct(Counter)2038_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)87_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aadbb64f96471bfc71c74bc8fbaae3d147796f5f1f8fdcdb387cd060c025228a": {
      "address": "0x87D1bAE5B553f0115a321bfd42D35cf3C5c281DF",
      "txHash": "0x7584a506316971f60465ffbd2995e165537c13b6086aa1b9f31fd1e545b1f59f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2073_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "originalTokens",
            "type": "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)",
            "src": "NftFractionsDex.sol:26"
          },
          {
            "contract": "NftFractionsDex",
            "label": "fractionsAmountByTokenId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "NftFractionsDex.sol:27"
          }
        ],
        "types": {
          "t_struct(Counter)2073_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(OriginalToken)87_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.OriginalToken)"
          },
          "t_struct(OriginalToken)87_storage": {
            "label": "struct NftFractionsDex.OriginalToken",
            "members": [
              {
                "label": "originalContract",
                "type": "t_address"
              },
              {
                "label": "originalTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f88056d1a54b05109a756cac038ed83d38c3ce1e46a1fd27be5a4d01751d5cef": {
      "address": "0xfe587b59c0C40670091C3E64fA4675AFA2496dDC",
      "txHash": "0xec9a10bed057de3149f124e6bb8bbf44dd3eb7c7b157c20070feb011eb5199fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2096_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)89_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2096_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)89_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)89_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "afdd02ed3a992d66f54ffbc5b754a8d90a7caba224b9f3d21d24b65aaccaac6d": {
      "address": "0x44a3884A18947d7A9094d7c50246369B060B645B",
      "txHash": "0x29fb9875e2e76f5b328e97f5f960ce1893965f6025bbd0152e0b2ca41ff213aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2304_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2304_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e819b79808d6be149c5fde9c20084ff849f023ec168fc2371df38a5b44cf1d5": {
      "address": "0x72B7819cb5E398E0b32c069b22b40BB21C64f9D9",
      "txHash": "0xa4132dc94d94602d6616f914fcf2c5bf79e8cec3ae3bb25d706bd643dd7d9f30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2214_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2214_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42147599d7fd4e90bb0a7b8b3b624f3cb3d8753093b8077208e96706d3919d09": {
      "address": "0x41074eB3E151b238abF6aAef7fF88bAeAfB1AF56",
      "txHash": "0x12c019340f8e4c6ca07f1824ae9b09d9ce557e501f1cf89da9a4840043610be5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2266_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2266_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06c3689fc284c0aeb1c24389f1a602f38cc88b40bdd9ee6a5735f656716b0dff": {
      "address": "0x45711c9F10844ac518928d9B7422059e8468eD67",
      "txHash": "0xdf8c6758bc3bc68e77ec159f00b439d4bac8a0a9ee786634aabae3ed76a941e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2252_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2252_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "509dcab9c2b07f6ef94b9039fc9130aea96ff90d5c5b96bae620e9e1279bec6b": {
      "address": "0xD77E8C3d1DE9704be48D347e3132D3408E1b9334",
      "txHash": "0xf516be6174c92533346edddab290e5111ac51f850894a8e667bd10f342567dd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2304_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2304_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cd8500341e9f7cf6d23f2f4e4b0a51ef178aba79b0c8e9b6db9a4397b767ba77": {
      "address": "0x493c84d24Dac41683AeaBB496d8884a3fBF2C475",
      "txHash": "0x55ef86f6150902c672ba3968a0b27716e6827a27a90adf1a059700ae22436dd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2252_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2252_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ce91973b101bed404ed718007ba5cb083bb74335839dcb842a3fc515f61f4a6": {
      "address": "0x90d08514eb82707fBf47Aad30F96e522286c5BDD",
      "txHash": "0x9b6677c2a4940067cbdf19a12a78d9506962cb1842ad769ace236d4b8917e78a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2219_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1fda66d5728b5746db507b7af78c4d15ccd8b674712b5aa83b62cdeaabc8857": {
      "address": "0x1753FD0F24A1f8B3198f210df1221786FF7b021b",
      "txHash": "0x2abf6deed6e9e799e167885da77745f391167fbacc111d892a318c50d41379a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2237_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2237_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0aca51821b9e1aafe72b3a18432a7b4768258dd5c5db549282bc4add7577e146": {
      "address": "0xf8dBc1D3c2C1E3c3dEc1D172624ad5e5448F7CE5",
      "txHash": "0x23965b2172b1cae147b4c3ed47f47c747fd410aa7e440b56b45db1a8d40b5972",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2247_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2247_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e7ab2fca991363d75ccade0cb096b465a2981885efc278910e4d42af28644cf": {
      "address": "0x0608A3c2af4788EBd763374550C0cC5F5c907a20",
      "txHash": "0xa866641447b9adc76b84ba4297cbf708dabfc0af334c6b4e82c26f45f4bc6564",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2242_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2242_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee83a8eb8d686396a66e67d889474384028effaf153f7f7b8ad2288143ff3042": {
      "address": "0x1D186F91e1795E6AE187d555B3089315dc65cB31",
      "txHash": "0xc967dae8724aaaf852cad065d453fe2a3d03b2c1f50ee107f5bfeaa72d740503",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2224_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2224_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7c50ec638e5bab2d73f72f6048d841bc8a0d85a2d64fc82907ca35d7b83c099": {
      "address": "0xFA09B757df9281E9b4295BDd397a072A02213bD5",
      "txHash": "0xa649222fe7eea5c20ae3e5b5343a01ef91d6f0bc17d4bfa62a46281eb968c892",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsDex",
            "label": "_ids",
            "type": "t_struct(Counter)2260_storage",
            "src": "NftFractionsDex.sol:19"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsDex.sol:27"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)102_storage)",
            "src": "NftFractionsDex.sol:28"
          },
          {
            "contract": "NftFractionsDex",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsDex.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)2260_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_struct(Token)102_storage)": {
            "label": "mapping(uint256 => struct NftFractionsDex.Token)"
          },
          "t_struct(Token)102_storage": {
            "label": "struct NftFractionsDex.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "141bcde48bd51cff19c6a8dd3986e36ef904ba40e3a313e7c74592739415c541": {
      "address": "0xee7472F5b775E599C1352C8b4884fA2D3ba87c87",
      "txHash": "0xb022edaf782edb0869d4384c2b4775dd4e6e937e6be591b3f83920393db1458a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)2797_storage",
            "src": "Dex.sol:27"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:28"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))",
            "src": "Dex.sol:29"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsDex",
            "type": "t_contract(NftFractionsDex)973",
            "src": "Dex.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)2797_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)37_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)37_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)19"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)19": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_contract(NftFractionsDex)973": {
            "label": "contract NftFractionsDex"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f7c9fb0d789e7b8053b942cef4212d300566be1a97ba8ff45607fa44848b930b": {
      "address": "0x3c93516fa40fcFa7e1181fe1EeEc6A75E6FA3484",
      "txHash": "0xa106a9e34468115fac9ecb6b63d3e3770bcb4ed77ac22fc9fe99bbc697cd1558",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)2734_storage",
            "src": "Dex.sol:27"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:28"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))",
            "src": "Dex.sol:29"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsRepository",
            "type": "t_contract(NftFractionsRepository)910",
            "src": "Dex.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)2734_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)37_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)37_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)19"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)19": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_contract(NftFractionsRepository)910": {
            "label": "contract NftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c002deddc8a4c7284d81fc0eeb350d87aa8f7606a02c770db7ce6fb9c437418": {
      "address": "0x99816BB1F5803340e9B790fbf419Dfdd3Add103c",
      "txHash": "0x3211a04863e7432b7f4fb22768d139641495569a071c74a80f3fe491a3e7dd6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)3077_storage",
            "src": "Dex.sol:37"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:38"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))",
            "src": "Dex.sol:39"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsRepository",
            "type": "t_contract(NftFractionsRepository)1253",
            "src": "Dex.sol:40"
          }
        ],
        "types": {
          "t_struct(Counter)3077_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)37_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)37_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)19"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)19": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_contract(NftFractionsRepository)1253": {
            "label": "contract NftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8eb615735c8049e5aa96c7a88140f5cdbff111b6d57a6e8214caf7d15f72730": {
      "address": "0xf8A0E346A561177bfdCf102FC01Ae647138CCe18",
      "txHash": "0x5c12a692d402f993b057ac056b403aba419d7fb7c96335e06f1c32ff5e07960e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)3225_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:28"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)856_storage)",
            "src": "NftFractionsRepository.sol:29"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)3225_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)856_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)856_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2a9fa65923926858145cc82ffa8263b44dd998dee16ac63cced8cddbf53f73af": {
      "address": "0x79c4271f297c3781e681870D940121729Abb2476",
      "txHash": "0x47154e589681c646bd2cae6c70a6c794218da1a2f434ef3b85ceb04b5b260a62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)3239_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:28"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)856_storage)",
            "src": "NftFractionsRepository.sol:29"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)3239_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)856_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)856_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba48e09a7b2bbeb5d460301830de74b6618e03e7a3ee21a87ade031fb46e6122": {
      "address": "0xc4698882b8db1adae50FB3796640a973A2421298",
      "txHash": "0x5485c7c50a034cfc95d288128c0fcddf7b0eaeb65d6288bdfd8be204466d23bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)3239_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:28"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)856_storage)",
            "src": "NftFractionsRepository.sol:29"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)3239_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)856_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)856_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d55e86c5769c42e4d957a53d7269986ca34c0946645c24e31f10aedea7b32f3": {
      "address": "0x9D3Ab597D891E12b687a4c653838BaAF1c1ECddc",
      "txHash": "0xa76e3411c28a945ae9854fe5350c62264d079b24303c81d3690aceee36b34bfe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)3239_storage",
            "src": "Dex.sol:37"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:38"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))",
            "src": "Dex.sol:39"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsRepository",
            "type": "t_contract(NftFractionsRepository)1415",
            "src": "Dex.sol:40"
          }
        ],
        "types": {
          "t_struct(Counter)3239_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)37_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)37_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)19"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)19": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_contract(NftFractionsRepository)1415": {
            "label": "contract NftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a605bb19e3c998edad2981e1955facdbec93acfa78f74ff2f1b0b5493e07f8e6": {
      "address": "0x2891253Be19A64687282E5271C95c2a7F1048C06",
      "txHash": "0xa1558b87abbcdaf1ab552f914e4c46449b57b91e217d72749946954ae0ba1806",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)3240_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:28"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)856_storage)",
            "src": "NftFractionsRepository.sol:29"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)3240_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)856_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)856_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "87719e09c9c2f1cd7729e2f7982f5e0c36f85c959a33f49a665a9eb96fba2947": {
      "address": "0x620b4D12dF090e49E538309Da5339102Bf4D23b2",
      "txHash": "0x9b60a0af7a71d7deb045f2f68a6ea903ba5b8e4299b27481c0301ba52af3dc8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)3261_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)856_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:30"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:32"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:34"
          }
        ],
        "types": {
          "t_struct(Counter)3261_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)856_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)856_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba10231014abe84e1f9a53497cf5939865637e46fc9ac6ca06be9bd7b8805fad": {
      "address": "0x324a2999302C5cE6B3955F2BbC03E9d0F5274933",
      "txHash": "0xf34d45a556a9fe033f4799ffbe093747d6513a58c4168b6acbbc818567afad92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)3270_storage",
            "src": "Dex.sol:37"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:38"
          },
          {
            "contract": "Dex",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:39"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))",
            "src": "Dex.sol:40"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsRepository",
            "type": "t_contract(NftFractionsRepository)1446",
            "src": "Dex.sol:41"
          }
        ],
        "types": {
          "t_struct(Counter)3270_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)37_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)37_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)37_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)19"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)19": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_contract(NftFractionsRepository)1446": {
            "label": "contract NftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38314c335f6db594159c447b721d951424aa2ab4a71bbea68349d1061a3cc320": {
      "address": "0xFb1757DD9F439A21b56302AbecdABBFbFcD07f76",
      "txHash": "0xbff2d3c214aafe8b3e61d18347680fb1601f5921e383aaa2ee18207bb1d8869f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4889_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2147_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:30"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:32"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:34"
          }
        ],
        "types": {
          "t_struct(Counter)4889_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2147_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)2147_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bd4045de1b936f6e7925ed1024741f7331a6970faf64e5bd006cee7f8b17b467": {
      "address": "0x1d1A78153870426e29F8C1795Bf84D56b1719f94",
      "txHash": "0xd3b5c27b483e63e58e0826115a149ad94e55158b7d991c3e68e322d9441909b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4915_storage",
            "src": "NftFractionsRepository.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2160_storage)",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:30"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:32"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:34"
          }
        ],
        "types": {
          "t_struct(Counter)4915_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2160_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)2160_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e6ca3a3335f65c379ceb2f40e64284e930e94a9b46b3957034e911296c85abe3": {
      "address": "0xB62D6a7B994f89922B68063b15bfcEa49ECFE570",
      "txHash": "0x9fc02ba655e219b421c2aa9aca6ad3aba2d3c779366149282322136f83828ab9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4017_storage",
            "src": "NftFractionsRepository.sol:27"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)1202_storage)",
            "src": "NftFractionsRepository.sol:28"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:31"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:33"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)4017_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)1202_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepository.Token)"
          },
          "t_struct(Token)1202_storage": {
            "label": "struct NftFractionsRepository.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "eef8495dafc28c48c8b975da1d1c42f1890cab0d0d1b067e3f296d052876d852": {
      "address": "0xbf6FFfe2521546185F66627e89E2416DE9461009",
      "txHash": "0x74f5a559996f33279c567eef9013d95739599fb50488d8fe674110075ea14165",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2638_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "MaticNftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4795_storage",
            "src": "MaticNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)4795_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2638_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2638_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a2a7bc746b832d96f324f8c6adfc3254a04c9f3b5d69e20b7946b7fb688eac7a": {
      "address": "0xfd344D198B03e0D288ab03476cB0F934feE8aBd7",
      "txHash": "0x3297b6cf71d3a81dd1d101c355345c2b95ba4404a3c4b0a7e550b74f8c117c95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2159_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "MaticNftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4301_storage",
            "src": "MaticNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)4301_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2159_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2159_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7292b52d5e6a8a3941b4909db1f8052a0cf65b470d2d284ad95257a74bad4569": {
      "address": "0xaC4DE800F5D81Ef3643629C62c925312d6Bf9DAc",
      "txHash": "0x905b20ee672037981c5a23d8f9114ba2e5ea1b7aab9af61096f8c5abef0007e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2159_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:21"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:23"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)2159_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2159_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a447735ad9ca0ca4ac027482c974bc6fda9def2c0d67373992e8cc6097077c1c": {
      "address": "0x166F1C46EDfE3482D609371d968b0A38f27b6ed2",
      "txHash": "0x34b37df5ec891a9092419735b0c0176e4410d51bb3c08274270b48ec38687c22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2149_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "MaticNftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4311_storage",
            "src": "MaticNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)4311_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2149_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2149_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a4b94a817a27e7345df04e23e9f7008327278176c8c8ccad5c7b677eaf50ad35": {
      "address": "0x79fFA52B68247a306F6BD048A912F1B3E6bBc9e6",
      "txHash": "0x86f102a3322d1bbfe2a538003b35e93e8edb4f96deee02b1bda0d0fab784ff0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2149_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:21"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:23"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)2149_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2149_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "688a86557699bb0532fea8d1cf8e28cc604e8275ea3faa44cc6ec4bb1f27ee10": {
      "address": "0x7424B1e762B772804508befA948a2Ce5dc8E0c99",
      "txHash": "0xf1bf643695cfbdca6eb76e9d72bd8a228c458d10d0f724b23bb93ca9e768accc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2144_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "MaticNftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)4317_storage",
            "src": "MaticNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)4317_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)2144_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2144_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c36576ed3ba4fde900d7007fc4880178c594e1067e574b95b2215d15f913da7": {
      "address": "0x0b3EEAFFC98995F4e20863E40D12f657ff7C9aef",
      "txHash": "0xf0c9bd2b634b2f10e5729ab7fa447b6b63bc2991db30006228b2948e2765764f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2144_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:21"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:23"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)2144_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2144_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9dda035ac05d0ec8c06dec7437e5cccdaeb049d6b7994b14efb69590de051582": {
      "address": "0x6f422772341b70275Cacf442240702E29D0D151C",
      "txHash": "0x3d25dda7500bdba94570375516f7dee1cfd32342eb5a3ceeb291a6801a9e6bd3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)3502_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "MaticNftFractionsRepository",
            "label": "_ids",
            "type": "t_struct(Counter)5668_storage",
            "src": "MaticNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_struct(Counter)5668_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Token)3502_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)3502_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf9ab26f2f3cab92afdfabb395dae32ff208e7773a2e006b148ddae3f6497485": {
      "address": "0xa3dF35F69caEC4290043aaaC2BCF62320c9b3a05",
      "txHash": "0xeb7203152227f6ff0e95aa65063b2f7e6cb05a5ceb200b155f9d1453b4ad44bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2144_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:21"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:23"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)2144_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2144_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "57333ed93d59f234260a7d1376ecc8b409d82c10c52e649d70b4620433dc017a": {
      "address": "0xf4B59b23bFC9393547B9DFab512779089CaADF7E",
      "txHash": "0x672e2deeda749d3bcaa42226268f22ec200310de2644daf2a7e2bb632e19df47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)2090_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "NftFractionsRepository.sol:21"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "NftFractionsRepository.sol:23"
          },
          {
            "contract": "NftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "NftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)2090_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)2090_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "831390be0aa973791866f32e29eeb6f0040618305b9b04bfd14fdc8f00c177e3": {
      "address": "0x9C4Ef7C76525fde32dbE9255B013Aaee4DFB61ca",
      "txHash": "0xc21edccf72183fee1fa54842714bff74bdc9f41f3122b0fe2fe8120fbbbcf90a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:406"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NftFractionsRepositoryBase",
            "label": "tokens",
            "type": "t_mapping(t_uint256,t_struct(Token)3502_storage)",
            "src": "NftFractionsRepositoryBase.sol:26"
          },
          {
            "contract": "BscNftFractionsRepository",
            "label": "tokenIdsByShareOwner",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "BscNftFractionsRepository.sol:21"
          },
          {
            "contract": "BscNftFractionsRepository",
            "label": "ownersByTokenId",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "BscNftFractionsRepository.sol:23"
          },
          {
            "contract": "BscNftFractionsRepository",
            "label": "tokenIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "BscNftFractionsRepository.sol:25"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_uint256,t_struct(Token)3502_storage)": {
            "label": "mapping(uint256 => struct NftFractionsRepositoryBase.Token)"
          },
          "t_struct(Token)3502_storage": {
            "label": "struct NftFractionsRepositoryBase.Token",
            "members": [
              {
                "label": "erc721ContractAddress",
                "type": "t_address"
              },
              {
                "label": "erc721TokenId",
                "type": "t_uint256"
              },
              {
                "label": "totalFractionsAmount",
                "type": "t_uint256"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f6a14db7d13a3da87b5765f9822770397d4d7e241795d35d57cc53f80ee63e5d": {
      "address": "0xeB0ab9F005346F05ac3D7aE45c07900e86d550c5",
      "txHash": "0xb7d8f94126f2931e0587ac6ab52807ea7043e4a60a4d6c41f7ba26b3125c7628",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5605_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2921",
            "src": "DexBase.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)5605_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2921": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bcb7bc892c428d0fd91d7c32026ff6848ffea100802bcb086ab5a633792e2f23": {
      "address": "0xeCAedc0BD3d0519e99030846Fa774B4072Bc56ba",
      "txHash": "0xe78af10a12048c133f98ae08b58fe9dd78c00c12ee7aafbc9b97641d0d27787c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5605_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2921",
            "src": "DexBase.sol:35"
          },
          {
            "contract": "MaticDex",
            "label": "_ids",
            "type": "t_struct(Counter)5605_storage",
            "src": "MaticDex.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)5605_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2921": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5ca55ebfc1d1e86ad3c098e987f946581142f90b0ae53eedca334e9ed9bdbd56": {
      "address": "0x17eaBF2bBc48f47A453d6b06Da7894bc84160F16",
      "txHash": "0x057c0e03ad00a6ecc3a7d358e28197c895277daae3ac4c3c85810311891214a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5638_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2954",
            "src": "DexBase.sol:35"
          },
          {
            "contract": "MaticDex",
            "label": "_ids",
            "type": "t_struct(Counter)5638_storage",
            "src": "MaticDex.sol:44"
          }
        ],
        "types": {
          "t_struct(Counter)5638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2954": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "023bafc61151d87cc2162123b14c03c44aac814d04ee575561de18cfc9479bec": {
      "address": "0x202b8dC6b39836113b737e588D3508Cc88F666d5",
      "txHash": "0xdd58fa7d0be3bea2be3c8de771b5f318afbfa4cd54c4fe8d2a5cf62bd1ec9d68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5638_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2954",
            "src": "DexBase.sol:35"
          }
        ],
        "types": {
          "t_struct(Counter)5638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2954": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9d5fe46da4dccce815acfd3fd8af6c8e96a05f2449676fe05f309638171ed3e1": {
      "address": "0xf834495A60604CD8aFEB9063F9A4a099CFb49267",
      "txHash": "0x9741387fffefc196ced9d2e1720abdd1be36d03767f92aade235fc8707732a00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5668_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "_tradeIds",
            "type": "t_struct(Counter)5668_storage",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:35"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2979",
            "src": "DexBase.sol:36"
          },
          {
            "contract": "MaticDex",
            "label": "_ids",
            "type": "t_struct(Counter)5668_storage",
            "src": "MaticDex.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)5668_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2979": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c44c8de2f53a1e7097532689688c29d6b841f353f4193c52a8fd817280839b8a": {
      "address": "0xB91208aC1B28C59A670b7929A278B49D9138Af6b",
      "txHash": "0x40c095a5134bf048e25137d4a65233c483de6515167f8be0bf3f360176fe1443",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DexBase",
            "label": "_orderIds",
            "type": "t_struct(Counter)5668_storage",
            "src": "DexBase.sol:30"
          },
          {
            "contract": "DexBase",
            "label": "_tradeIds",
            "type": "t_struct(Counter)5668_storage",
            "src": "DexBase.sol:31"
          },
          {
            "contract": "DexBase",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:32"
          },
          {
            "contract": "DexBase",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "DexBase.sol:33"
          },
          {
            "contract": "DexBase",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))",
            "src": "DexBase.sol:34"
          },
          {
            "contract": "DexBase",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "DexBase.sol:35"
          },
          {
            "contract": "DexBase",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2979",
            "src": "DexBase.sol:36"
          }
        ],
        "types": {
          "t_struct(Counter)5668_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct DexBase.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)1778_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct DexBase.Order[])"
          },
          "t_array(t_struct(Order)1778_storage)dyn_storage": {
            "label": "struct DexBase.Order[]"
          },
          "t_struct(Order)1778_storage": {
            "label": "struct DexBase.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)1760"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)1760": {
            "label": "enum DexBase.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2979": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fbdd4e5fabe6f72c20c9b9b7c969fdb9f557eb22da6ac3073852437d01e839ab": {
      "address": "0xae786E222E0Cdc1d9c4362068E32A92698329B27",
      "txHash": "0x21ffc09f64775a9eba52790035c5f5e1379a20d75cd6949ce796bdc328118ade",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Dex",
            "label": "_orderIds",
            "type": "t_struct(Counter)5668_storage",
            "src": "Dex.sol:40"
          },
          {
            "contract": "Dex",
            "label": "ethBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:41"
          },
          {
            "contract": "Dex",
            "label": "ethReservedBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "Dex.sol:42"
          },
          {
            "contract": "Dex",
            "label": "orderBook",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)828_storage)dyn_storage))",
            "src": "Dex.sol:43"
          },
          {
            "contract": "Dex",
            "label": "sharesReserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "Dex.sol:44"
          },
          {
            "contract": "Dex",
            "label": "nftFractionsRepository",
            "type": "t_contract(INftFractionsRepository)2979",
            "src": "Dex.sol:45"
          }
        ],
        "types": {
          "t_struct(Counter)5668_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Order)828_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Dex.Order[]))"
          },
          "t_mapping(t_uint256,t_array(t_struct(Order)828_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Dex.Order[])"
          },
          "t_array(t_struct(Order)828_storage)dyn_storage": {
            "label": "struct Dex.Order[]"
          },
          "t_struct(Order)828_storage": {
            "label": "struct Dex.Order",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "trader",
                "type": "t_address"
              },
              {
                "label": "side",
                "type": "t_enum(Side)810"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "filled",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(Side)810": {
            "label": "enum Dex.Side",
            "members": [
              "BUY",
              "SELL"
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(INftFractionsRepository)2979": {
            "label": "contract INftFractionsRepository"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x64B0dF8CBDA97Af0D9E67d0679B4E5653f43b0BA",
    "txHash": "0x0bf790778ccaecff138c0e6be04b31c061d398cde13d6fa87e58fbd0b37c8168"
  }
}
